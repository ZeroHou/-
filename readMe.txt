实现简单的单链表

结构体Node：后结点next、数据data
类SList：头结点head、尾结点last、长度len

主要功能有：添加（前插入、后插入、一般位置插入）、删除（前推出、后推出、值删除、位置删除）、查询（值查询、位置查询）、链表反转、链表复制、打印、返回链表长度

时间复杂度：
1、添加
前插入：因为存在头结点head，时间复杂度为O(1)
后插入：因为存在尾结点last，时间复杂度为O(1)
一般位置插入：需要遍历链表，时间复杂度为O(n)
2、删除
前推出：因为存在头结点head，时间复杂度为O(1)
后推出：虽然存在尾结点last，但不像双链表一样，存在前结点指针pre，因此时间复杂度为O(n)
值删除：需要遍历链表，时间复杂度为O(n)
位置删除：需要遍历链表，时间复杂度为O(n)
3、查询
值查询：需要遍历链表，时间复杂度为O(n)
位置查询：需要遍历链表，时间复杂度为O(n)
4、链表反转
需要遍历链表，时间复杂度为O(n)（链表反转对于双链表没有意义，只需要头指针head和尾指针last调换就行，时间复杂度为O(1)）
5、链表复制
需要遍历链表，时间复杂度为O(n)

总结：这个单链表的效率体现在前插入、前推出和后插入，其他操作时间复杂度都是O(n)
（ps：对于更简单的单链表，即只维护头结点head，只有前插入和前推出有效率）